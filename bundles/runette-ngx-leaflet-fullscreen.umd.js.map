{"version":3,"file":"runette-ngx-leaflet-fullscreen.umd.js","sources":["../../../node_modules/@runette/leaflet-fullscreen/dist/Leaflet.fullscreen.js","ng://@runette/ngx-leaflet-fullscreen/lib/ngx-leaflet-fullscreen.component.ts","ng://@runette/ngx-leaflet-fullscreen/lib/ngx-leaflet-fullscreen.module.ts"],"sourcesContent":["(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['leaflet'], factory);\n    } else if (typeof module !== 'undefined') {\n        // Node/CommonJS\n        module.exports = factory(require('leaflet'));\n    } else {\n        // Browser globals\n        if (typeof window.L === 'undefined') {\n            throw new Error('Leaflet must be loaded first');\n        }\n        factory(window.L);\n    }\n}(function (L) {\n    L.Control.Fullscreen = L.Control.extend({\n        options: {\n            position: 'topleft',\n            title: {\n                'false': 'View Fullscreen',\n                'true': 'Exit Fullscreen'\n            }\n        },\n\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div', 'leaflet-control-fullscreen leaflet-bar leaflet-control');\n\n            this.link = L.DomUtil.create('a', 'leaflet-control-fullscreen-button leaflet-bar-part', container);\n            this.link.href = '#';\n\n            this._map = map;\n            this._map.on('fullscreenchange', this._toggleTitle, this);\n            this._toggleTitle();\n\n            L.DomEvent.on(this.link, 'click', this._click, this);\n\n            return container;\n        },\n\n        onRemove: function (map) {\n            map.off('fullscreenchange', this._toggleTitle, this);\n        },\n\n        _click: function (e) {\n            L.DomEvent.stopPropagation(e);\n            L.DomEvent.preventDefault(e);\n            this._map.toggleFullscreen(this.options);\n        },\n\n        _toggleTitle: function() {\n            this.link.title = this.options.title[this._map.isFullscreen()];\n        }\n    });\n\n    L.Map.include({\n        isFullscreen: function () {\n            return this._isFullscreen || false;\n        },\n\n        toggleFullscreen: function (options) {\n            var container = this.getContainer();\n            if (this.isFullscreen()) {\n                if (options && options.pseudoFullscreen) {\n                    this._disablePseudoFullscreen(container);\n                } else if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                } else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                } else if (document.webkitCancelFullScreen) {\n                    document.webkitCancelFullScreen();\n                } else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                } else {\n                    this._disablePseudoFullscreen(container);\n                }\n            } else {\n                if (options && options.pseudoFullscreen) {\n                    this._enablePseudoFullscreen(container);\n                } else if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                } else {\n                    this._enablePseudoFullscreen(container);\n                }\n            }\n\n        },\n\n        _enablePseudoFullscreen: function (container) {\n            L.DomUtil.addClass(container, 'leaflet-pseudo-fullscreen');\n            this._setFullscreen(true);\n            this.fire('fullscreenchange');\n        },\n\n        _disablePseudoFullscreen: function (container) {\n            L.DomUtil.removeClass(container, 'leaflet-pseudo-fullscreen');\n            this._setFullscreen(false);\n            this.fire('fullscreenchange');\n        },\n\n        _setFullscreen: function(fullscreen) {\n            this._isFullscreen = fullscreen;\n            var container = this.getContainer();\n            if (fullscreen) {\n                L.DomUtil.addClass(container, 'leaflet-fullscreen-on');\n            } else {\n                L.DomUtil.removeClass(container, 'leaflet-fullscreen-on');\n            }\n            this.invalidateSize();\n        },\n\n        _onFullscreenChange: function (e) {\n            var fullscreenElement =\n                document.fullscreenElement ||\n                document.mozFullScreenElement ||\n                document.webkitFullscreenElement ||\n                document.msFullscreenElement;\n\n            if (fullscreenElement === this.getContainer() && !this._isFullscreen) {\n                this._setFullscreen(true);\n                this.fire('fullscreenchange');\n            } else if (fullscreenElement !== this.getContainer() && this._isFullscreen) {\n                this._setFullscreen(false);\n                this.fire('fullscreenchange');\n            }\n        }\n    });\n\n    L.Map.mergeOptions({\n        fullscreenControl: false\n    });\n\n    L.Map.addInitHook(function () {\n        if (this.options.fullscreenControl) {\n            this.fullscreenControl = new L.Control.Fullscreen(this.options.fullscreenControl);\n            this.addControl(this.fullscreenControl);\n        }\n\n        var fullscreenchange;\n\n        if ('onfullscreenchange' in document) {\n            fullscreenchange = 'fullscreenchange';\n        } else if ('onmozfullscreenchange' in document) {\n            fullscreenchange = 'mozfullscreenchange';\n        } else if ('onwebkitfullscreenchange' in document) {\n            fullscreenchange = 'webkitfullscreenchange';\n        } else if ('onmsfullscreenchange' in document) {\n            fullscreenchange = 'MSFullscreenChange';\n        }\n\n        if (fullscreenchange) {\n            var onFullscreenChange = L.bind(this._onFullscreenChange, this);\n\n            this.whenReady(function () {\n                L.DomEvent.on(document, fullscreenchange, onFullscreenChange);\n            });\n\n            this.on('unload', function () {\n                L.DomEvent.off(document, fullscreenchange, onFullscreenChange);\n            });\n        }\n    });\n\n    L.control.fullscreen = function (options) {\n        return new L.Control.Fullscreen(options);\n    };\n}));\n","\n/// <reference types='@runette/leaflet-fullscreen'/>\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport {Map, control, Control, FullscreenOptions} from 'leaflet';\nimport '../../../../node_modules/@runette/leaflet-fullscreen/dist/Leaflet.fullscreen.js';\n\n@Component({\n  selector: 'leaflet-fullscreen-control',\n  template: '',\n  styleUrls: []\n})\nexport class FullscreenControlComponent implements OnInit, OnDestroy {\n  private _map: Map;\n  private control: Control;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.map.removeControl(this.control)\n  }\n\n  @Input() options: FullscreenOptions = {};\n\n  @Input() set map(map: Map){\n    if (map) { \n      this._map = map;\n      this.control = control.fullscreen(this.options)\n      this.control.addTo(map);\n      map.on('enterFullscreen', () => map.invalidateSize());\n      map.on('exitFullscreen', () => map.invalidateSize());\n    };\n  };\n  get map(): Map {\n    return this._map\n  };\n};\n","import { NgModule } from '@angular/core';\nimport { FullscreenControlComponent } from './ngx-leaflet-fullscreen.component';\n\n@NgModule({\n  declarations: [FullscreenControlComponent],\n  imports: [\n  ],\n  exports: [FullscreenControlComponent]\n})\nexport class NgxLeafletFullscreenModule { }\n"],"names":["define","require$$0","control","Component","Input","NgModule"],"mappings":"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"}