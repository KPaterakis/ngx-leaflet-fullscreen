{"version":3,"file":"runette-ngx-leaflet-fullscreen.js","sources":["../../../node_modules/@runette/leaflet-fullscreen/dist/Leaflet.fullscreen.js","ng://@runette/ngx-leaflet-fullscreen/lib/ngx-leaflet-fullscreen.component.ts","ng://@runette/ngx-leaflet-fullscreen/lib/ngx-leaflet-fullscreen.module.ts"],"sourcesContent":["(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['leaflet'], factory);\n    } else if (typeof module !== 'undefined') {\n        // Node/CommonJS\n        module.exports = factory(require('leaflet'));\n    } else {\n        // Browser globals\n        if (typeof window.L === 'undefined') {\n            throw new Error('Leaflet must be loaded first');\n        }\n        factory(window.L);\n    }\n}(function (L) {\n    L.Control.Fullscreen = L.Control.extend({\n        options: {\n            position: 'topleft',\n            title: {\n                'false': 'View Fullscreen',\n                'true': 'Exit Fullscreen'\n            }\n        },\n\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div', 'leaflet-control-fullscreen leaflet-bar leaflet-control');\n\n            this.link = L.DomUtil.create('a', 'leaflet-control-fullscreen-button leaflet-bar-part', container);\n            this.link.href = '#';\n\n            this._map = map;\n            this._map.on('fullscreenchange', this._toggleTitle, this);\n            this._toggleTitle();\n\n            L.DomEvent.on(this.link, 'click', this._click, this);\n\n            return container;\n        },\n\n        onRemove: function (map) {\n            map.off('fullscreenchange', this._toggleTitle, this);\n        },\n\n        _click: function (e) {\n            L.DomEvent.stopPropagation(e);\n            L.DomEvent.preventDefault(e);\n            this._map.toggleFullscreen(this.options);\n        },\n\n        _toggleTitle: function() {\n            this.link.title = this.options.title[this._map.isFullscreen()];\n        }\n    });\n\n    L.Map.include({\n        isFullscreen: function () {\n            return this._isFullscreen || false;\n        },\n\n        toggleFullscreen: function (options) {\n            var container = this.getContainer();\n            if (this.isFullscreen()) {\n                if (options && options.pseudoFullscreen) {\n                    this._disablePseudoFullscreen(container);\n                } else if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                } else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                } else if (document.webkitCancelFullScreen) {\n                    document.webkitCancelFullScreen();\n                } else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                } else {\n                    this._disablePseudoFullscreen(container);\n                }\n            } else {\n                if (options && options.pseudoFullscreen) {\n                    this._enablePseudoFullscreen(container);\n                } else if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                } else {\n                    this._enablePseudoFullscreen(container);\n                }\n            }\n\n        },\n\n        _enablePseudoFullscreen: function (container) {\n            L.DomUtil.addClass(container, 'leaflet-pseudo-fullscreen');\n            this._setFullscreen(true);\n            this.fire('fullscreenchange');\n        },\n\n        _disablePseudoFullscreen: function (container) {\n            L.DomUtil.removeClass(container, 'leaflet-pseudo-fullscreen');\n            this._setFullscreen(false);\n            this.fire('fullscreenchange');\n        },\n\n        _setFullscreen: function(fullscreen) {\n            this._isFullscreen = fullscreen;\n            var container = this.getContainer();\n            if (fullscreen) {\n                L.DomUtil.addClass(container, 'leaflet-fullscreen-on');\n            } else {\n                L.DomUtil.removeClass(container, 'leaflet-fullscreen-on');\n            }\n            this.invalidateSize();\n        },\n\n        _onFullscreenChange: function (e) {\n            var fullscreenElement =\n                document.fullscreenElement ||\n                document.mozFullScreenElement ||\n                document.webkitFullscreenElement ||\n                document.msFullscreenElement;\n\n            if (fullscreenElement === this.getContainer() && !this._isFullscreen) {\n                this._setFullscreen(true);\n                this.fire('fullscreenchange');\n            } else if (fullscreenElement !== this.getContainer() && this._isFullscreen) {\n                this._setFullscreen(false);\n                this.fire('fullscreenchange');\n            }\n        }\n    });\n\n    L.Map.mergeOptions({\n        fullscreenControl: false\n    });\n\n    L.Map.addInitHook(function () {\n        if (this.options.fullscreenControl) {\n            this.fullscreenControl = new L.Control.Fullscreen(this.options.fullscreenControl);\n            this.addControl(this.fullscreenControl);\n        }\n\n        var fullscreenchange;\n\n        if ('onfullscreenchange' in document) {\n            fullscreenchange = 'fullscreenchange';\n        } else if ('onmozfullscreenchange' in document) {\n            fullscreenchange = 'mozfullscreenchange';\n        } else if ('onwebkitfullscreenchange' in document) {\n            fullscreenchange = 'webkitfullscreenchange';\n        } else if ('onmsfullscreenchange' in document) {\n            fullscreenchange = 'MSFullscreenChange';\n        }\n\n        if (fullscreenchange) {\n            var onFullscreenChange = L.bind(this._onFullscreenChange, this);\n\n            this.whenReady(function () {\n                L.DomEvent.on(document, fullscreenchange, onFullscreenChange);\n            });\n\n            this.on('unload', function () {\n                L.DomEvent.off(document, fullscreenchange, onFullscreenChange);\n            });\n        }\n    });\n\n    L.control.fullscreen = function (options) {\n        return new L.Control.Fullscreen(options);\n    };\n}));\n","\n/// <reference types='@runette/leaflet-fullscreen'/>\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport {Map, control, Control, FullscreenOptions} from 'leaflet';\nimport '../../../../node_modules/@runette/leaflet-fullscreen/dist/Leaflet.fullscreen.js';\n\n@Component({\n  selector: 'leaflet-fullscreen-control',\n  template: '',\n  styleUrls: []\n})\nexport class FullscreenControlComponent implements OnInit, OnDestroy {\n  private _map: Map;\n  private control: Control;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.map.removeControl(this.control)\n  }\n\n  @Input() options: FullscreenOptions = {};\n\n  @Input() set map(map: Map){\n    if (map) { \n      this._map = map;\n      this.control = control.fullscreen(this.options)\n      this.control.addTo(map);\n      map.on('enterFullscreen', () => map.invalidateSize());\n      map.on('exitFullscreen', () => map.invalidateSize());\n    };\n  };\n  get map(): Map {\n    return this._map\n  };\n};\n","import { NgModule } from '@angular/core';\nimport { FullscreenControlComponent } from './ngx-leaflet-fullscreen.component';\n\n@NgModule({\n  declarations: [FullscreenControlComponent],\n  imports: [\n  ],\n  exports: [FullscreenControlComponent]\n})\nexport class NgxLeafletFullscreenModule { }\n"],"names":["define","require$$0"],"mappings":"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"}